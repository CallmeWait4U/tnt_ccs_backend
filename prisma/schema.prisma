// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id                         String @id @default(uuid())
  name                       String
  taxCode                    String
  businessRegistrationNumber String
  businessNationality        String
  businessIndustryId         String
  phoneNumber                String
  email                      String
  domain                     String
  tenantId                   String
}

model Account {
  id            String         @id @default(uuid())
  username      String
  password      String
  refreshToken  String?
  accessToken   String?
  type          TypeAccount
  tenantId      String?
  permissions   Permission[]
  notifications Notification[]
}

model Permission {
  id             String    @id @default(uuid())
  namePermission String
  description    String
  Account        Account[]
}

model Notification {
  id        String   @id @default(uuid())
  type      String?
  title     String
  content   String
  time      DateTime
  Account   Account? @relation(fields: [accountId], references: [id])
  accountId String?
}

enum TypeAccount {
  ADMIN    @map("0")
  EMPLOYEE @map("1")
  CUSTOMER @map("2")
}



model Customer {
  id            Int         @id @default(autoincrement())
  uuid          String      @unique @default(uuid())
  code          String
  name          String
  isBusiness    Boolean
  source        Int?
  city          Int?
  district      String?
  detailAddress String?
  email         String?
  phoneNumber   String
  description   String?
  receiveMail   String?
  Business Business[]
  Individual Individual[]
  ActivityAssign ActivityAssign[]
}

model Business {
  id                     Int       @id @default(autoincrement())
  name                   String
  nationality            String?
  registrationNumber     String?
  taxCode                String?
  industryId             String?
  representativeName     String?
  representativeBirthday DateTime?
  representativeCccd     String?
  representativePosition  String?
  representativeGender   Int?
  representativePhone    String?
  representativeEmail    String?
  Customer               Customer @relation(fields:[customerUUID],references:[uuid])
  customerUUID           String @unique
}

model Individual {
  id          Int       @id @default(autoincrement())
  name        String
  birthday    DateTime?
  cccd        String?
  gender      Int?
  nationality String?
  Customer               Customer @relation(fields:[customerUUID],references:[uuid])
  customerUUID  String  @unique
}

model Employee {
  id            Int     @id @default(autoincrement())
  uuid          String  @unique @default(uuid())
  code          String?
  name          String
  city          Int?
  district      String?
  detailAddress String?
  email         String?
  phoneNumber   String
  description   String?
  gender        Boolean
  position      String?
  avatar        Bytes?
  nationality   String?
  ActivityAssign ActivityAssign[]
}

model Activity {
  id           Int      @id @default(autoincrement())
  uuid         String   @default(uuid()) @unique
  name         String
  description  String
  ActivityAssign ActivityAssign[]

}

model ActivityAssign {
  id           Int      @id @default(autoincrement())
  uuid         String   @default(uuid()) @unique
  startDate    DateTime
  endDate      DateTime
  createDate   DateTime
  doneDate     DateTime?
  status       Int
  note         String
  Customer               Customer @relation(fields:[customerUUID],references:[uuid])
  customerUUID           String @unique
  Employee               Employee @relation(fields:[employeeUUID],references:[uuid])
  employeeUUID           String @unique
  Activity Activity @relation(fields:[activityUUID],references:[uuid])
  activityUUID  String @unique
}